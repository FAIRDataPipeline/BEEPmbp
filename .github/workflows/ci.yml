name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-18.04
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Install packages
      run: sudo apt-get update && sudo apt-get install -y git build-essential mpich

    - name: Compile
      run: |
        make

    - name: Run simulation
      run: |
        mpirun -n 1 ./analysis 256 1
        mkdir Simulation
        cp cases_small.txt houses_small.txt events_small.txt Simulation
        ls Simulation

    - name: Upload simulation results
      uses: actions/upload-artifact@v2
      with:
        name: Simulation
        path: Simulation

    - name: Run inference
      run: |
        mpirun -n 1 ./analysis 256 2 50

    - name: Upload inference results
      uses: actions/upload-artifact@v2
      with:
        name: Output
        path: Output

    - name: Check output files
      run: |
        required_files="cases_small.txt houses_small.txt events_small.txt Output Output/trace_50.txt Output/R0_50.txt Output/params_50.txt Output/region0_0_data_50.txt Output/region1_0_data_50.txt"
        failures=0

        for f in $required_files ; do
          if [ ! -r "$f" ]; then
            echo "Required output file $f not found" >&2
            failures=$((failures+1))
          fi
        done

        if [ $failures -gt 0 ]; then
          echo "::error ::Failed due to missing output files" >&2
          exit 1
        else
          echo "All required output files found"
        fi

  upload:
    needs: build
    runs-on: ubuntu-18.04

    steps:
    - name: Set up ssh agent
      uses: webfactory/ssh-agent@v0.2.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add host public key
      run: |
        echo "projectdata.scrc.uk ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCedi8BdVnymEHtXQ6u7WBi0UAcQdsOEub25kzzCRDMmOOFsicdW30G+wePmw1DbV7HdHONqSo8S5+GmH0Et546TW/8HqaklnOe+1It18XIcvA58Bh8cPv/0r02OJAkmwk7Qja+dOg5iXZSWceTvW6dN/2TuJEXdYGBY1cI9847v8hGGbmH+SZ6wIWrDX/aMgND449ikstfguOckEuBAL1OdOyRm1Li8CtHtQNRefGPZpvtpeKzDB2rkFo+G/nBmBdPJ+kCXiblIMoKK2UhZbz5VYxBmbOUcG4Xq+9EnyxgUcX7VSKfuzIMhJK7OVFbpOs0JTawMhZQzExh9SCKFLavo2arL4WL1EvGKEbZFWedU+lW4vtsaUz2uTg5x6NV7aX+kbSo3Aq2cbxhbAhmt2aw/tFDNil+bUBb0NMWrYbzp5oFCBSw0KpBwGQx/Rc7H+gI0wVGFw24G4Dud1O3JAjv8bBRzihX/m10QsnRm56xVu/JTUuUasaG0Ocyv3uOqfM=" >> ~/.ssh/known_hosts

    - name: Download artifacts
      uses: actions/download-artifact@v2

    - name: Display structure of downloaded files
      run: ls -R

    - name: Download log
      run: |
        mkdir log
        cd log
        curl -L -o logs.zip -H "Accept: application/vnd.github.v3+json" -H "authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/ScottishCovidResponse/CoronaPMCMC/actions/runs/${GITHUB_RUN_ID}/logs
        echo "Downloaded files:"
        find
        unzip logs.zip
        echo "Find logs:"
        find

    - name: Upload results to website
      run: |
        path=branches/$(basename $GITHUB_REF)/workflows/$GITHUB_WORKFLOW/$GITHUB_RUN_NUMBER
        mkdir -p $path
        cp -a $PWD/{Simulation,Output} $path
        echo "ln -s $GITHUB_RUN_NUMBER $(dirname $path)/latest"
        ln -s $GITHUB_RUN_NUMBER $(dirname $path)/latest
        echo "find:"
        find branches
        echo "ls -R"
        ls -R
        # rsync --relative -avz --no-implied-dirs $path/ ian@projectdata.scrc.uk:
        rsync -avz branches ian@projectdata.scrc.uk: # goes into ~/www/coronapmcmc on server
        url=https://projectdata.scrc.uk/$path
        echo "::warning ::Build output available at $url" >&2

